<?php

namespace App\Http\Controllers;

use App\Models\Kelas;
use App\Models\Material;
use Illuminate\Support\Facades\Auth;
use App\Models\Attendance;
use Illuminate\Http\Request;
use App\Models\Code;
use Carbon\Carbon;


class DashboardController extends Controller
{
    public function index()
    {
        $user = Auth::user();

        $isCheckin = Attendance::where('id_asisten', $user->id_asisten)->whereNotNull('start')->whereNull('end')->first();
        return view('dashboard', [
            'user' => $user,
            'kelas' => Kelas::all(),
            'materials' => Material::all(),
            'attendance' => $isCheckin,
        ]);
    }

    public function store(Request $request)
    {
        $user = Auth::user();
        $validatedData = $request->validate([
            'id_kelas' => 'required',
            'id_material' => 'required',
            'teaching_role' => 'required',
            'code' => ['required', 'exists:codes,code', function ($attribute, $value, $fail) use ($user) {
                $codeGeneratedByUser = Code::where('code', $value)->where('id_user', $user->id)->exists();

                if ($codeGeneratedByUser) {
                    $fail("You cannot attend using a {$attribute} generated by yourself.");
                }
            }]
        ]);

        $code = Code::where('code', $validatedData['code'])->first();

        if ($code) {

            if ($code->id_user_get) {
                return redirect('/')->with('error', 'Code has already been used.');
            }

            $code->update([
                'id_user_get' => $user->id,
            ]);

            $validatedData['id_code'] = $code->id;
            $validatedData['id_asisten'] = $user->id_asisten;
            $validatedData['start'] = Carbon::now();
            $validatedData['date'] = Carbon::today();

            Attendance::create($validatedData);
            return redirect('/')->with('success', 'Checkin success');
        } else {
            return redirect('/')->with('error', 'Code not valid');
        }
    }

    public function update(Request $request)
    {
        $attendanceId = $request->input('attendance_id');
        $attendance = Attendance::findOrFail($attendanceId);

        $attendance->update([
            'end' => now(),
            'duration' => now()->diffInMinutes($attendance->start),
        ]);

        return redirect('/')->with('success', 'Check-out successfull');
    }

    public function attendances()
    {
        $attendances = Attendance::all();
        return view('attendance.index', [
            'attendances' => $attendances,
        ]);
    }

    public function attendancesByUser()
    {
        $user = Auth::user();
        $attendances = Attendance::where('id_asisten', $user->id_asisten)->get();
        return view('myattendance.index', [
            'attendances' => $attendances,
        ]);
    }
}
